{"version":3,"sources":["components/TodoItem.jsx","components/AppHeader.jsx","components/ItemCreationPanel.jsx","components/TodoItemContainer.jsx","components/ItemCreationContainer.jsx","components/AppPresentational.jsx","components/AppContainer.jsx","components/AppTheme.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","li","display","text","textDecoration","DIVSTYLE","margin","borderRadius","backgroundColor","TodoItem","_ref","content","time","features","removeItem","setItemDone","setItemStarred","summary","description","years","months","days","hours","minutes","index","category","isStarred","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClick","react_default","a","createElement","style","ListItem","button","container","onClick","ExpandLess","ExpandMore","ListItemText","root","primary","concat","ListItemSecondaryAction","IconButton","edge","aria-label","Delete_default","Button","variant","color","Collapse","in","timeout","unmountOnExit","SvgIcon","fill","d","flexGrow","AppHeader","className","AppBar","position","Toolbar","Typography","TodoItemWrapper","connect","state","props","todos","find","element","dispatch","type","removeItemAction","setItemDoneAction","setItemStarredAction","paper","palette","secondary","light","height","HOUROPTIONS","MINUTEOPTIONS","push","MenuItem","key","value","slice","ItemCreation","addItem","currentTime","Date","_useState","getFullYear","getMonth","getDay","getHours","getMinutes","_useState2","item","setItem","handleChange","e","property","subProperty","objectSpread","defineProperty","target","Paper","p","m","FormControl","InputLabel","htmlFor","Input","onChange","placeholder","input","name","id","Select","autoWidth","ItemCreationContainer","itemAsObject","addItemAction","ItemCreationPanel","width","title","fontWeight","AppPresentational","listsForRendering","saveItems","loadItems","console","log","logicLists","todoList","doneList","lists","length","TodoItemContainer","Fragment","Container","maxWidth","components_ItemCreationContainer","Box","List","Divider","AppContainer","initialState","taskIndex","store","createStore","newState","arguments","undefined","action","localStorage","saveCopy","JSON","stringify","hasOwnProperty","parse","assign","indexToRemove","indexOf","splice","indexToSetDone","indexToSetStarred","ConnectedApp","filter","sort","b","map","es","AppTheme","createMuiTheme","teal","blueGrey","MuiThemeProvider","components_AppContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b58b7d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Collapse, List } from '@material-ui/core';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport { ExpandMore, ExpandLess } from '@material-ui/icons';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    li: {\r\n        display: \"block\"\r\n    },\r\n    text:{textDecoration: \"line-through\"}\r\n}));\r\nconst DIVSTYLE = { margin: \"10px\", borderRadius: \"10px\", backgroundColor: \"#b0bec5\" }\r\n\r\n\r\nconst TodoItem = ({ content, time, features, removeItem, setItemDone, setItemStarred }) => {\r\n    const { summary, description } = content;\r\n    const { years, months, days, hours, minutes } = time;\r\n    const { index, category, isStarred } = features;\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleClick() {\r\n        setOpen(!open);\r\n    } return (\r\n        <div style={DIVSTYLE}>\r\n            <ListItem button classes={{ container: classes.li }} onClick={handleClick}>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n                <ListItemText classes={category===\"done\"? {root: classes.text}: null} primary={`${summary} ${hours}:${minutes}`} />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"Delete\" onClick={() => removeItem(index)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => setItemDone(index)}>{category === \"todo\"? \"Done!\": \"Not done\"}</Button>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <ListItem button onClick={handleClick} classes={{ container: classes.li }}>\r\n                <ListItemText classes={category===\"done\"? {root: classes.text}: null} primary={`${description} ${days}/${months}/${years}`} />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => setItemStarred(index)}>\r\n                            <SvgIcon>\r\n                                <path fill={isStarred ? \"#FFD700\" : \"#FFFFFF\"} d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\" />\r\n                            </SvgIcon>\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}\r\n\r\n// <React.Fragment>\r\n\r\n\r\n//  <ListItem button={true}\r\n//     // onClick={(e) => setItemDone(index, e)}\r\n//     >\r\n//         <IconButton onClick={(e) => setItemStarred(index, e)}>\r\n//             <SvgIcon>\r\n//                 <path fill={isStarred ? \"#FFD700\" : \"#FFFFFF\"} d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\" />\r\n//             </SvgIcon>\r\n//         </IconButton>\r\n//         <ListItemText primary={`${description} ${due}`} />\r\n//         <ListItemSecondaryAction>\r\n//             <IconButton edge=\"end\" aria-label=\"Delete\" onClick={(e) => removeItem(index, e)}>\r\n//                 <DeleteIcon />\r\n//             </IconButton>\r\n//         </ListItemSecondaryAction>\r\n//     </ListItem>\r\n//     <Collapse in={true} timeout=\"auto\" unmountOnExit>\r\n//         <List component=\"div\" disablePadding>\r\n//             <ListItem button className={classes.nested}>\r\n//                 <ListItemIcon>\r\n//                     <StarBorder />\r\n//                     <Typography>dsa</Typography>\r\n//                 </ListItemIcon>\r\n//                 <ListItemText primary=\"Starred\" >dsad</ListItemText>\r\n//             </ListItem>\r\n//         </List>\r\n//     </Collapse>\r\n\r\n{/* <ListItem button={true} className={classes.root} divider={true} onClick={(e) => setItemDone(index, e)}>\r\n                <IconButton onClick={(e) => setItemStarred(index, e)}>\r\n                    <SvgIcon>\r\n                        <path fill={isStarred ? \"#FFD700\" : \"#FFFFFF\"} d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\" />\r\n                    </SvgIcon>\r\n                </IconButton>\r\n                <ListItemText primary={`${description} ${due}`} />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"Delete\" onClick={(e) => removeItem(index, e)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <Divider /> */}\r\n// </React.Fragment >\r\n\r\n\r\n\r\nexport default TodoItem\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { blue, } from '@material-ui/core/colors';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function AppHeader() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"initial\">\r\n            Goals\r\n          </Typography>\r\n          <SvgIcon>\r\n            <path fill=\"#FFFFFF\" d=\"M19,19H5V8H19M19,3H18V1H16V3H8V1H6V3H5C3.89,3 3,\r\n            3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M16.53,11.06L15.47,10L10.59,14.88L8.47,\r\n            12.76L7.41,13.82L10.59,17L16.53,11.06Z\" />\r\n          </SvgIcon>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        height: \"100px\",\r\n        display: \"flex\",\r\n    },\r\n    button: {\r\n        height: '48px'\r\n    }\r\n}));\r\n\r\n// let date_utils = {\r\n//     months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\r\n//         \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n//     days: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\r\n//         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],\r\n//     years: [2018, 2019, 2020, 2021, 2022]\r\n// };\r\nconst HOUROPTIONS = []\r\nconst MINUTEOPTIONS = []\r\nfor (let index = 0; index < 24; index++) {\r\n    HOUROPTIONS.push(\r\n        <MenuItem key={\"hours\" + index} value={`${('0' + index).slice(-2)}`}>{`${('0' + index).slice(-2)}`}</MenuItem>\r\n    )\r\n}\r\nfor (let index = 0; index < 61; index++) {\r\n    MINUTEOPTIONS.push(\r\n        <MenuItem key={\"minutes\" + index} value={`${('0' + index).slice(-2)}`}>{`${('0' + index).slice(-2)}`}</MenuItem>\r\n    )\r\n}\r\n\r\nconst ItemCreation = ({ addItem }) => {\r\n    let currentTime = new Date()\r\n    const classes = useStyles();\r\n    const [item, setItem] = useState({\r\n        content: { summary: \"\", description: \"\" },\r\n        time: {\r\n            years: currentTime.getFullYear(), months: currentTime.getMonth(), days: currentTime.getDay(),\r\n            hours: currentTime.getHours(), minutes: currentTime.getMinutes()\r\n        }\r\n    })\r\n    const handleChange = (e, property, subProperty) => {\r\n        setItem({ ...item, [property]: { ...item[property], [subProperty]: e.target.value } })\r\n    }\r\n    return (\r\n        <div>\r\n            <Paper classes={{ root: classes.paper }} className={classes.root} p={3} m={2}>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"summary\">Task: </InputLabel>\r\n                    <Input  onChange={(e) => { handleChange(e, \"content\", \"summary\") }}\r\n                        value={item.content.summary} placeholder={\"What do I want to do?...\"}\r\n                        input={<Input name=\"summary\" id=\"summary\" />}\r\n                    />\r\n                    {/* <FormControl>\r\n                        <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n                        <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n                    </FormControl> */}\r\n                </FormControl>\r\n                <FormControl >\r\n                    <InputLabel htmlFor=\"hours\">Hour</InputLabel>\r\n                    <Select\r\n                        value={item.time.hours}\r\n                        onChange={(e) => { handleChange(e, \"time\", \"hours\") }}\r\n                        input={<Input id=\"hours\" />} autoWidth   >\r\n                        {HOUROPTIONS}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl >\r\n                    <InputLabel htmlFor=\"minutes\">Minute</InputLabel>\r\n                    <Select\r\n                        value={item.time.minutes}\r\n                        onChange={(e) => { handleChange(e, \"time\", \"minutes\") }}\r\n                        input={<Input id=\"minutes\" />}  >\r\n                        {MINUTEOPTIONS}\r\n                    </Select>\r\n                </FormControl>\r\n                <Button classes={{ root: classes.button }} variant=\"contained\" color=\"primary\" onClick={() => { addItem(item) }}>Add Item</Button>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCreation\r\n","import { connect } from 'react-redux'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst REMOVE = \"REMOVE\"\r\nconst SETDONE = \"SETDONE\"\r\nconst SETSTARRED = \"SETSTARRED\"\r\nconst removeItemAction = (index) => {\r\n    return {\r\n        type: REMOVE,\r\n        index: index\r\n    }\r\n}\r\nconst setItemDoneAction = (index) => {\r\n    return {\r\n        type: SETDONE,\r\n        index: index\r\n    }\r\n}\r\nconst setItemStarredAction = (index) => {\r\n    return {\r\n        type: SETSTARRED,\r\n        index: index\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeItem: (index) => {\r\n\r\n            dispatch(removeItemAction(index))\r\n        },\r\n        setItemDone: (index) => {\r\n\r\n            dispatch(setItemDoneAction(index))\r\n        },\r\n        setItemStarred: (index) => {\r\n\r\n            dispatch(setItemStarredAction(index))\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    let taskObject = state.todos.find(element => element.features.index === props.index)\r\n    return taskObject\r\n}\r\n\r\nconst TodoItemWrapper = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TodoItem)\r\n\r\nexport default TodoItemWrapper","import { connect } from 'react-redux'\r\nimport ItemCreationPanel from './ItemCreationPanel'\r\n\r\nconst ADD = \"ADD\"\r\nconst addItemAction = (itemAsObject) => {\r\n    return { item: itemAsObject, type: ADD }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addItem: (itemAsObject) => {\r\n            dispatch(addItemAction(itemAsObject))\r\n        }\r\n    }\r\n}\r\n\r\nconst ItemCreationContainer = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ItemCreationPanel)\r\n\r\nexport default ItemCreationContainer","import React from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport TodoItem from './TodoItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { palette, spacing } from '@material-ui/system';\r\nimport { styled } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppHeader from \"./AppHeader\"\r\nimport TodoItemWrapper from './TodoItemContainer'\r\nimport ItemCreationContainer from './ItemCreationContainer';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        color: \"white\"\r\n    },\r\n    title: {\r\n        fontWeight: 550\r\n    }\r\n}));\r\n\r\nfunction AppPresentational({ listsForRendering, saveItems, loadItems }) {\r\n    const classes = useStyles();\r\n\r\n    //     const Box = styled.div`\r\n    //   ${palette}\r\n    //   ${spacing}\r\n    // `;\r\n    console.log(\"current lists:\");\r\n    console.log(listsForRendering)\r\n    const logicLists = { todoList: listsForRendering[0], doneList: listsForRendering[1] };\r\n    const lists = {};\r\n    for (const key in logicLists) {\r\n        lists[key] = [];\r\n        for (let index = 0; index < logicLists[key].length; index++) {\r\n            lists[key].push(\r\n                <TodoItemWrapper index={logicLists[key][index]} key={logicLists[key][index]} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppHeader>\r\n\r\n            </AppHeader>\r\n            <Container className={classes.root} maxWidth=\"md\" >\r\n                <Button onClick={saveItems}>Save in local storage</Button>\r\n                <Button onClick={loadItems}>Load</Button>\r\n                <ItemCreationContainer>\r\n                </ItemCreationContainer>\r\n                <Box variant=\"contained\" color=\"secondary\" p={3} >\r\n                    <Typography variant=\"h5\" color=\"primary\" className={classes.title}> To-do :</Typography>\r\n                    {lists[\"todoList\"]}\r\n                </Box>\r\n                <List>\r\n\r\n                </List>\r\n                <Divider />\r\n                <Box color=\"secondary\" p={3} >\r\n                    <Typography variant=\"h5\" color=\"primary\" className={classes.title}> Done :</Typography>\r\n\r\n                    {lists[\"doneList\"]}\r\n                </Box>\r\n\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AppPresentational\r\n","import React from 'react'\r\nimport AppPresentational from './AppPresentational';\r\nimport { createStore } from 'redux'\r\nimport { Provider, connect } from 'react-redux'\r\n\r\nconst REMOVE = \"REMOVE\"\r\nconst SETDONE = \"SETDONE\"\r\nconst SETSTARRED = \"SETSTARRED\"\r\nconst ADD = \"ADD\"\r\nconst SAVE = \"SAVE\"\r\nconst LOAD = \"LOAD\"\r\n\r\nconst AppContainer = () => {\r\n    const initialState = {\r\n        taskIndex: 1,\r\n        todos: [\r\n            {\r\n                content: { summary: \"Example\", description: \"Description example\" },\r\n                time: { years: 2019, months: 7, days: 6, hours: 14, minutes: 27 },\r\n                features: { index: 0, category: \"todo\", isStarred: false }\r\n            }\r\n        ]\r\n    }\r\n    const rootReducer = (state = initialState, action) => {\r\n        let newState;\r\n        switch (action.type) {\r\n            case (SAVE):\r\n                localStorage.saveCopy = JSON.stringify(state)\r\n                return state\r\n            case (LOAD):\r\n                if (localStorage.hasOwnProperty(\"saveCopy\"))\r\n                    return JSON.parse(localStorage.saveCopy)\r\n                return state\r\n            case (ADD):\r\n                newState = Object.assign({}, state)\r\n                newState.todos.push({\r\n                    content: { summary: action.item.content.summary, description: action.item.content.description },\r\n                    time: {\r\n                        years: action.item.time.years, months: action.item.time.months, days: action.item.time.days,\r\n                        hours: action.item.time.hours, minutes: action.item.time.minutes\r\n                    },\r\n                    features: { index: newState.taskIndex, isStarred: false, category: \"todo\" }\r\n                })\r\n                newState.taskIndex++;\r\n                return newState\r\n            case (REMOVE):\r\n                newState = Object.assign({}, state)\r\n                console.log(newState)\r\n                let indexToRemove = newState.todos.indexOf(element => element.features.index === action.index)\r\n                console.log(indexToRemove)\r\n                newState.todos.splice(indexToRemove, 1)\r\n                console.log(newState);\r\n                return newState;\r\n            case (SETDONE):\r\n                newState = Object.assign({}, state)\r\n                let indexToSetDone = newState.todos.indexOf(newState.todos.find(element => element.features.index === action.index))\r\n                newState.todos[indexToSetDone].features.category = newState.todos[indexToSetDone].features.category === \"todo\" ? \"done\" : \"todo\";\r\n                return newState\r\n            case (SETSTARRED):\r\n                newState = Object.assign({}, state)\r\n                let indexToSetStarred = newState.todos.indexOf(newState.todos.find(element => element.features.index === action.index))\r\n                newState.todos[indexToSetStarred].features.isStarred = !newState.todos[indexToSetStarred].features.isStarred;\r\n                return newState\r\n\r\n            default:\r\n                return state;\r\n        }\r\n\r\n    }\r\n\r\n    const store = createStore(rootReducer);\r\n\r\n    const mapStateToProps = (state) => {\r\n        let listsForRendering = [\r\n            state.todos.filter(item => item.features.category === \"todo\")\r\n                .sort((a, b) => b.features.isStarred - a.features.isStarred).map(element => element.features.index),\r\n            state.todos.filter(item => item.features.category === \"done\")\r\n                .sort((a, b) => b.features.isStarred - a.features.isStarred).map(element => element.features.index)\r\n        ]\r\n        return { listsForRendering: listsForRendering }\r\n    }\r\n    const mapDispatchToProps = dispatch => {\r\n        return {\r\n            saveItems: () => {\r\n                dispatch({ type: SAVE })\r\n            },\r\n            loadItems: () => {\r\n                dispatch({ type: LOAD })\r\n            }\r\n        }\r\n    }\r\n\r\n    const ConnectedApp = connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(AppPresentational)\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <ConnectedApp />\r\n        </Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default AppContainer\r\n","import React from 'react';\nimport AppContainer from './AppContainer';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nfunction AppTheme() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: teal,\n      secondary: blueGrey,\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppContainer />\n    </MuiThemeProvider>\n  );\n}\n\nexport default AppTheme;\n","import React from 'react';\r\nimport AppTheme from './components/AppTheme'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <AppTheme>\r\n        </AppTheme>\r\n    );\r\n}\r\n\r\nexport default AppTheme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}